method -1
int getMinDiff(int arr[], int n, int k) {
    // code here
    vector<pair<int,int>> store;
    for(int i=0;i<n;i++){
        if(arr[i]>=k){
            store.push_back({arr[i]+k,i});
            store.push_back({arr[i]-k,i});
        }else{
            store.push_back({arr[i]+k,i});
        }
    }
    sort(store.begin(),store.end());
    int ele = 0,left=0,right=0;
    vector<int> visi(n,0);
    while(ele<n && right<store.size()){
        if(visi[store[right].second]==0) ele++;
        visi[store[right].second]++;
        right++;
    }
    int ans = store[right-1].first - store[left].first;
    while(right<store.size()){
        if(visi[store[left].second]==1){
            ele--;
        }
        visi[store[left].second]--;
        left++;
        while(ele<n && right<store.size()){
            if(visi[store[right].second]==0) ele++;
            visi[store[right].second]++;
            right++;
        }
        if(ele==n){
            ans = min(ans,store[right-1].first-store[left].first);
        }else break;
    }
    return ans;
}

TC - O(nlogn);
SC - O(n);