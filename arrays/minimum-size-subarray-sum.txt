method -1
int minSubArrayLen(int target, vector<int>& nums) {
    int ans = INT_MAX;
    int n = nums.size();
    for(int i=0;i<n;i++){
        int sum = 0;
        for(int j=i;j<n;j++){
            sum+=nums[j];
            if(sum>=target){
                ans=min(ans,j-i+1);
            }
        }
    }
    if(ans == INT_MAX) return 0;
    return ans;
}

TC - O(n^2);
SC - O(1);

method -2
int minSubArrayLen(int target, vector<int>& nums) {
    int n = nums.size(),sum = 0,i=0,j=0,len = INT_MAX;
    while(j<n){
        sum+=nums[j++];
        while(sum>=target){
            len = min(len,j-i);
            sum-=nums[i++];
        }
    }
    return len == INT_MAX ? 0 : len;
}

TC - O(n);
SC - O(1);