method -2
int rowWithMax1s(vector<vector<int> > arr, int n, int m) {
    // code here
    int ans = -1;
    int maxVal = 0;
    for(int i=0;i<n;i++){
        int sum = 0;
        for(int j=0;j<m;j++){
            sum+=arr[i][j];
        }
        if(sum>maxVal){
            ans=i;
            maxVal=sum;
        }
    }
    return ans;
}

TC - O(n*m);
SC - O(1);

method -2
int rowWithMax1s(vector<vector<int> > arr, int n, int m) {
    // code here
    int ans = -1;
    int minPos = m;
    for(int i=0;i<n;i++){
        int l = 0, r = m-1;
        while(l<=r){
            int mid = (l+r)/2;
            if(arr[i][mid]==1){
                r=mid-1;
            }
            else l=mid+1;
        }
        if(l<minPos){
            ans = i;
            minPos=l;
        }
    }
    return ans;
}

TC - O(nlogm);
SC - O(1);

method -3
int rowWithMax1s(vector<vector<int> > arr, int n, int m) {
    // code here
    int ans = -1;
    int i=0,j=m-1;
    while(i<n && j>=0){
        if(arr[i][j]==1){
            ans = i;
            j--;
        }else i++;
    }
    return ans;
}

TC - O(n+m);
SC - O(1);