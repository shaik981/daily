Next smaller element

method -1
vector<int> help_classmate(vector<int> arr, int n) { 
    // Your code goes here
    vector<int> ans;
    for(int i=0;i<n;i++){
        int val = arr[i];
        int j=i+1;
        while(j<n && arr[j]>=val){
            j++;
        }
        if(j==n) ans.push_back(-1);
        else ans.push_back(arr[j]);
    }
    return ans;
}

TC - O(n^2);
SC - O(1);

method -2
vector<int> help_classmate(vector<int> arr, int n) { 
    // Your code goes here
    stack<int> st;
    vector<int> ans(n);
    for(int i=n-1;i>=0;i--){
        int val = arr[i];
        while(!st.empty() && arr[st.top()]>=val){
            st.pop();
        }
        if(st.empty()) ans[i]=-1;
        else ans[i] = arr[st.top()];
        st.push(i);
    }
    return ans;
} 

TC - O(n);
SC - O(n);

Prev smaller element

method -1
vector<int> help_classmate(vector<int> arr, int n) { 
    // Your code goes here
    vector<int> ans;
    for(int i=0;i<n;i++){
        int val = arr[i];
        int j=i-1;
        while(j>=0 && arr[j]>=val){
            j--;
        }
        if(j<0) ans.push_back(-1);
        else ans.push_back(arr[j]);
    }
    return ans;
}

TC - O(n^2);
SC - O(1);

method -2
vector<int> help_classmate(vector<int> arr, int n) { 
    // Your code goes here
    stack<int> st;
    vector<int> ans(n);
    for(int i=0;i<n;i++){
        int val = arr[i];
        while(!st.empty() && arr[st.top()]>=val){
            st.pop();
        }
        if(st.empty()) ans[i]=-1;
        else ans[i] = arr[st.top()];
        st.push(i);
    }
    return ans;
} 

TC - O(n);
SC - O(n);